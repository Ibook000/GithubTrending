name: 🚀 自动生成GitHub趋势榜单

on:
  schedule:
    - cron: '0 2 * * *'  # 每天UTC时间2点（北京时间10点）
  workflow_dispatch:  # 支持手动触发

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 需要写权限来提交历史文件
      pages: write
      id-token: write

    steps:
      - name: 📥 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史记录

      - name: 🐍 设置Python环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: 📦 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 🔍 网络连接诊断
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        run: |
          echo "🔍 开始网络连接诊断..."
          python test_network.py
        continue-on-error: true

      - name: 🎯 生成趋势榜单页面
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          # 设置GitHub Actions标识
          GITHUB_ACTIONS: true
          # 配置网络相关环境变量
          PYTHONUNBUFFERED: 1
          REQUESTS_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt
        run: |
          echo "🌐 配置网络环境..."
          # 显示网络配置信息
          echo "DNS配置:"
          cat /etc/resolv.conf
          echo "测试网络连接:"
          curl -I https://openrouter.ai --connect-timeout 10 || echo "⚠️ OpenRouter连接测试失败"
          
          echo "🚀 开始生成趋势榜单..."
          python github_trending_cards.py
          
          # 确保生成了HTML文件
          if [ ! -f "github_trending_cards.html" ]; then
            echo "❌ HTML文件生成失败"
            exit 1
          fi
          echo "✅ HTML文件生成成功"
          
          # 显示生成的文件信息
          echo "📄 生成的文件:"
          ls -la github_trending_cards.*

      - name: 📅 保存历史页面
        run: |
          # 获取当前日期
          DATE=$(date +%Y-%m-%d)
          echo "📅 当前日期: $DATE"

          # 创建历史目录
          mkdir -p "history/$DATE"

          # 复制文件到历史目录
          cp github_trending_cards.html "history/$DATE/index.html"
          cp github_trending_cards.css "history/$DATE/github_trending_cards.css"

          # 如果有展示图片也复制
          if [ -f "展示1.png" ]; then
            cp "展示1.png" "history/$DATE/"
          fi
          if [ -f "img.png" ]; then
            cp "img.png" "history/$DATE/"
          fi

          # 创建数据备份（提取页面中的数据信息）
          echo "{\"date\": \"$DATE\", \"generated_at\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\", \"source\": \"GitHub Trending\"}" > "history/$DATE/metadata.json"

          echo "📁 历史页面已保存到 history/$DATE/"

      - name: 📊 生成历史统计页面
        run: |
          # 使用Python脚本生成智能的历史统计页面
          python generate_history_stats.py
          echo "📊 历史统计页面已生成"

      - name: 📄 准备发布文件
        run: |
          # 创建发布目录
          mkdir -p publish

          # 复制最新版本到根目录
          cp github_trending_cards.html publish/index.html
          cp github_trending_cards.css publish/

          # 复制整个历史目录
          cp -r history publish/

          # 复制gh-pages专用README
          cp README_GHPAGES.md publish/README.md

          # 如果有展示图片也复制
          if [ -f "展示1.png" ]; then
            cp "展示1.png" publish/
          fi
          if [ -f "img.png" ]; then
            cp "img.png" publish/
          fi

          echo "✅ 发布文件准备完成"
          echo "📊 文件结构:"
          find publish -type f | head -20

      - name: 💾 提交历史文件到gh-pages分支
        run: |
          # 配置Git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # 获取当前日期
          DATE=$(date +%Y-%m-%d)
          
          # 保存当前工作目录的文件
          echo "💾 保存工作目录文件..."
          mkdir -p /tmp/workspace_files
          cp -r * /tmp/workspace_files/ || true
          
          # 切换到gh-pages分支（如果不存在则创建）
          echo "🔄 切换到gh-pages分支..."
          if git ls-remote --heads origin gh-pages | grep -q gh-pages; then
            git checkout gh-pages
            git pull origin gh-pages
          else
            echo "🌱 创建新的gh-pages分支..."
            git checkout --orphan gh-pages
            git rm -rf . || true
          fi

          # 复制保存的文件到当前目录
          echo "📁 复制文件到gh-pages分支..."
          if [ -d "/tmp/workspace_files/publish" ]; then
            cp -r /tmp/workspace_files/publish/* .
            
            # 提交更改
            git add .
            if ! git diff --staged --quiet; then
              git commit -m "📅 保存 $DATE 的GitHub趋势榜单历史记录"
              git push origin gh-pages --force-with-lease
              echo "✅ 历史文件已保存到gh-pages分支"
            else
              echo "📝 没有新的更改需要提交"
            fi
          else
            echo "⚠️ 发布目录不存在"
          fi

      - name: 🚀 部署到GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./publish
          publish_branch: gh-pages
          force_orphan: true
          commit_message: '🎨 更新GitHub趋势榜单 - $(date +%Y-%m-%d)'